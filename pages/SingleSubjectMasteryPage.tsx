import React, { useState } from 'react';
import SectionWrapper from '../components/SectionWrapper';
import Card from '../components/Card';
import { STRATEGIES } from '../constants';
import { Strategy } from '../types';
import StrategyDetail from '../components/StrategyDetail';
import BookOpenIcon from '../components/icons/BookOpenIcon';
import BrainIcon from '../components/icons/BrainIcon';
import ZapIcon from '../components/icons/ZapIcon';
import LightbulbIcon from '../components/icons/LightbulbIcon';

const studentStories = [

];

const quickTips = [
  'ржмрзЬ chapter ржжрзЗржЦрж▓рзЗржЗ ржорж╛ржерж╛ ржШрзБрж░рзЗ? ржнрж╛ржмрзЛ, ржЫрзЛржЯ ржЫрзЛржЯ ржЯрзБржХрж░рзЛтАФржЖржЬ ржПржХржЯрзБ, ржХрж╛рж▓ ржПржХржЯрзБ, рж╢рзЗрж╖рзЗ ржжрзЗржЦржмрзЗ, тАЬржУрж╣, рж╢рзЗрж╖!тАЭ',
  'ржпрж╛ рж╢рж┐ржЦржЫрзЛ, pillow-ржХрзЗ ржмрж╛ ржмржирзНржзрзБржХрзЗ рж╣рж╛рж╕рждрзЗ рж╣рж╛рж╕рждрзЗ explain ржХрж░рзЛтАФржирж┐ржЬрзЗржЗ рж╣рзЗрж╕рзЗ ржлрзЗрж▓ржмрзЗ, ржЖрж░ ржоржирзЗ ржерж╛ржХржмрзЗ!',
  'Color, diagram, memeтАФnotes ржмрж╛ржирж╛рждрзЗ ржоржЬрж╛ рж▓рж╛ржЧрж▓рзЗ, ржкрзЬрж╛ржЯрж╛ржУ ржоржЬрж╛рж░ рж╣рзЯрзЗ ржпрж╛рзЯ, рждрж╛ржЗ ржирж╛?',
  'Exam-ржПрж░ ржЖржЧрзЗ ржирж┐ржЬрзЗржХрзЗ ржЫрзЛржЯ quiz ржжрж╛ржУтАФржнрзБрж▓ ржкрзЗрж▓рзЗ, тАЬржЖрж╣рж╛, ржПржЗржЯрзБржХрзБ рждрзЛ revise ржХрж░рж▓рзЗржЗ рж╣ржмрзЗ!тАЭ',
];

const roadmapSteps = [
  {
    label: 'рзз. Concept ржмрзБржЭрзЛ',
    desc: 'ржХрзЗржи, ржХрзАржнрж╛ржмрзЗтАФржПржЗ ржкрзНрж░рж╢рзНржиржЧрзБрж▓рзЛ ржорж╛ржерж╛рзЯ ржЖржирзЛред Feynman Technique ржмрж╛ mind map-ржП ржЖржБржХрзЛ, ржоржЬрж╛ ржкрж╛ржмрзЗ!',
    icon: <BrainIcon className="w-7 h-7 text-blue-500" />,
    buddy: 'тАЬржмржирзНржзрзБржХрзЗ ржмрж╛ pillow-ржХрзЗ ржмрзЛржЭрж╛рждрзЗ ржкрж╛рж░рж▓рзЗ, ржмрзБржЭрзЗ ржЧрзЗржЫрзЛтАФржПржЯрж╛ рждрзЛ ржирж┐ржЬрзЗрж░ superpower!тАЭ'
  },
  {
    label: 'рзи. Practice ржХрж░рзЛ',
    desc: 'ржирж┐ржЬрзЗржХрзЗ quiz ржжрж╛ржУ, ржЫрзЛржЯ ржЫрзЛржЯ problem solve ржХрж░рзЛ, spaced repetition-ржП ржкрзЬрзЛтАФржнрзБрж▓ рж╣рж▓рзЗ, тАЬржУрж░рзЗ ржмрж╛ржмрж╛, ржПржЗржЯрж╛ рждрзЛ ржоржЬрж╛рж░!тАЭ',
    icon: <BookOpenIcon className="w-7 h-7 text-green-500" />,
    buddy: 'тАЬржнрзБрж▓ ржХрж░рж▓рзЗ ржоржи ржЦрж╛рж░рж╛ржк? ржЖрж░рзЗ, рж╕ржмрж╛ржЗ рждрзЛ ржХрж░рзЗ! ржкрж░рзЗрж░ ржмрж╛рж░ ржжрзЗржЦрзЛ, ржХрзЗржоржи ржкрж╛рж░рзЛ!тАЭ'
  },
  {
    label: 'рзй. Review & Reflect',
    desc: 'ржнрзБрж▓ржЧрзБрж▓рзЛ ржЦрзБржБржЬрзЗ ржмрзЗрж░ ржХрж░рзЛ, ржкрзНрж░рж╢рзНржи ржХрж░рзЛ, ржПржХржЯрзБ ржПржХржЯрзБ ржХрж░рзЗ plan ржмржжрж▓рж╛ржУтАФржПржнрж╛ржмрзЗржЗ рждрзЛ level up!',
    icon: <LightbulbIcon className="w-7 h-7 text-yellow-500" />,
    buddy: 'тАЬржирж┐ржЬрзЗрж░ ржнрзБрж▓ ржирж┐рзЯрзЗ relaxтАФржПржЯрж╛ржЗ рждрзЛ рж╢рзЗржЦрж╛рж░ ржЖрж╕рж▓ ржоржЬрж╛!тАЭ'
  },
];

const faq = [
  {
    q: 'Exam hall-ржП рж╕ржм ржнрзБрж▓рзЗ ржЧрзЗрж▓рзЗ ржХрзА ржХрж░ржм?',
    a: 'ржЧржнрзАрж░ рж╢рзНржмрж╛рж╕ ржирж╛ржУ, рж╕рж╣ржЬ question ржжрж┐рзЯрзЗ рж╢рзБрж░рзБ ржХрж░рзЛ, ржирж┐ржЬрзЗрж░ preparation-ржП ржмрж┐рж╢рзНржмрж╛рж╕ рж░рж╛ржЦрзЛред Mnemonic ржмрж╛ diagram ржоржирзЗ ржХрж░рзЛтАФpanic ржорж╛ржирзЗ pause, not game over!',
  },
  {
    q: 'Boring subject-ржП motivation ржкрж╛ржЗ ржирж╛тАФhelp!',
    a: 'ржЫрзЛржЯ reward set ржХрж░рзЛ, ржмржирзНржзрзБ ржирж┐рзЯрзЗ ржкрзЬрзЛ, game ржмрж╛ржирж┐рзЯрзЗ ржирж╛ржУред ржмрзЬ goal ржоржирзЗ рж░рж╛ржЦрзЛтАФрждрзБржорж┐ ржкрж╛рж░ржмрзЗ!',
  },
];

const dos = [
  'ржирж┐ржЬрзЗрж░ ржорждрзЛ ржХрж░рзЗ ржмрзБржЭрзЗ ржирж┐рж▓рзЗ, ржкрзЬрж╛ ржЖрж░ ржЪрж╛ржк ржоржирзЗ рж╣рзЯ ржирж╛тАФржорж╛ржерж╛рзЯ ржврзБржХрзЗ ржпрж╛рзЯ, ржоржЬрж╛ рж▓рж╛ржЧрзЗ!',
  'Past paper ржмрж╛ quiz-ржП ржирж┐ржЬрзЗржХрзЗ ржПржХржЯрзБ challenge ржжрж╛ржУтАФржирж┐ржЬрзЗржЗ ржЕржмрж╛ржХ рж╣ржмрзЗ, ржХржд ржХрж┐ржЫрзБ ржкрж╛рж░рзЛ!',
  'ржкрзЬрж╛рж░ ржорж╛ржЭрзЗ ржПржХржЯрзБ рж╣рж╛ржБржЯрж╛, ржПржХржЯрзБ ржЪрж╛тАФbrain-ржУ рждрзЛ ржмржирзНржзрзБ, ржУржХрзЗржУ break ржжрж╛ржУ!',
  'ржХрж┐ржЫрзБ ржмрзБржЭрждрзЗ ржирж╛ ржкрж╛рж░рж▓рзЗ, ржмржирзНржзрзБ ржмрж╛ ржмрзЬржжрзЗрж░ ржЬрж┐ржЬрзНржЮрзЗрж╕ ржХрж░рзЛтАФhelp ржЪрж╛ржЗрж▓рзЗ, рж╕ржмрж╛ржЗ ржЦрзБрж╢рж┐ рж╣рзЯ!',
];
const donts = [
  'рж╕ржм ржПржХ рж░рж╛рждрзЗ ржЧрж┐рж▓рждрзЗ ржЧрзЗрж▓рзЗ, brain-ржУ ржмрж▓ржмрзЗ, тАЬржнрж╛ржЗ, ржПржХржЯрзБ ржжрзЯрж╛ ржХрж░рзЛ!тАЭ',
  'рж╢рзБржзрзБ ржкрзЬрж╛ ржкрзЬрж╛ ржЦрзЗрж▓рж▓рзЗ, quiz-ржП ржоржЬрж╛ ржорж┐рж╕ ржХрж░ржмрзЗ!',
  'ржШрзБржо ржирж╛ ржжрж┐рж▓рзЗ, brain-ржУ рждрзЛ тАЬhangтАЭтАФрждрж╛ржЗ ржирж╛?',
  'ржпрж╛ ржХржарж┐ржи рж▓рж╛ржЧрзЗ, рж╕рзЗржЯрж╛ржХрзЗ ржПржХржЯрзБ ржПржХржЯрзБ ржХрж░рзЗ tackle ржХрж░рзЛтАФрж╢рзЗрж╖рзЗ ржжрзЗржЦржмрзЗ, тАЬржПржЯрж╛ рждрзЛ ржкрж╛рж░рж┐!тАЭ',
];

const SingleSubjectMasteryPage: React.FC = () => {
  const [selectedStrategy, setSelectedStrategy] = useState<Strategy | null>(null);
  const [openFaq, setOpenFaq] = useState<number | null>(null);

  const subjectMasteryStrategies = STRATEGIES.filter(s => 
    s.category === 'Concept Mastery' || 
    s.category === 'Memory Enhancement' || 
    s.id === 'active-recall' || 
    s.id === 'feynman-technique' ||
    s.id === 'visualization' ||
    s.id === 'retrieval-practice'
  );
  const relevantStrategiesForAnxiety = STRATEGIES.filter(s => s.id === 'stress-taming');

  return (
    <div className="animate-fadeIn">
      {/* Hero Section */}
      <div className="bg-gradient-to-r from-blue-100 to-sky-200 py-12 px-4 rounded-b-3xl shadow mb-10 text-center">
        <h1 className="text-4xl md:text-5xl font-extrabold text-blue-900 mb-4">Subject Mastery: Cool ржнрж╛ржЗ/ржЖржкрзБ Style!</h1>
        <p className="text-xl md:text-2xl text-blue-700 mb-6 max-w-2xl mx-auto">тАЬржПржХржЯрж╛ рж╕рж╛ржмржЬрзЗржХрзНржЯ, ржПржХрж╢рзЛ percent masteryтАФрждрзБржорж┐ ржкрж╛рж░ржмрзЗ!тАЭ</p>
        <a href="#roadmap" className="inline-block bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-full text-lg shadow-lg transition">Start Your Gameplan</a>
      </div>

      {/* Visual Roadmap */}
      <SectionWrapper id="roadmap" title={<span>ЁЯЧ║я╕П Mastery Gameplan: рзйржЯрж╛ Step, Boss Result!</span>} subtitle="Step by stepтАФsubject рж╣ржмрзЗ рждрзЛржорж╛рж░ playground!">
        <div className="flex flex-col md:flex-row justify-center items-stretch gap-6 mb-8">
          {roadmapSteps.map((step, idx) => (
            <div key={idx} className="flex-1 bg-white rounded-xl shadow p-6 flex flex-col items-center text-center border-t-4 border-blue-400">
              {step.icon}
              <h3 className="mt-3 text-xl font-bold text-blue-800">{step.label}</h3>
              <p className="mt-2 text-gray-700">{step.desc}</p>
              <div className="mt-2 text-blue-500 font-semibold">{step.buddy}</div>
            </div>
          ))}
        </div>
        <div className="bg-blue-50 border-l-4 border-blue-400 p-4 rounded-xl text-blue-700 font-bold text-center">
          Self-Check: ржЖржЬржХрзЗ ржХрзЛржи topic-ржЯрж╛ ржмржирзНржзрзБ/ржкрж┐рж▓рзЛ-ржХрзЗ explain ржХрж░рждрзЗ ржкрж╛рж░ржмрзЗ?
        </div>
      </SectionWrapper>

      {/* Quick Tips & Did You Know */}
      <div className="max-w-4xl mx-auto grid md:grid-cols-2 gap-6 mb-12">
        <div className="bg-yellow-50 border-l-4 border-yellow-400 p-6 rounded-xl shadow">
          <h4 className="font-bold text-yellow-700 mb-2">тЪб Cool Buddy Tips</h4>
          <ul className="list-disc list-inside text-gray-700 space-y-1">
            {quickTips.map((tip, i) => <li key={i}>{tip}</li>)}
          </ul>
        </div>
        <div className="bg-blue-50 border-l-4 border-blue-400 p-6 rounded-xl shadow">
          <h4 className="font-bold text-blue-700 mb-2">ЁЯТб Did You Know?</h4>
          <p className="text-gray-700">Active recall ржорж╛ржирзЗ brain gymтАФjust rereading ржорж╛ржирзЗ рж╢рзБржзрзБ ржЪрзЛржЦрзЗрж░ ржмрзНржпрж╛рзЯрж╛ржо! Quiz war рж╢рзБрж░рзБ ржХрж░рзЛтАФretention double!</p>
        </div>
      </div>

      {/* Do's and Don'ts */}
      <SectionWrapper title={<span>тЬЕ Survival Guide: DoтАЩs & тЭМ DonтАЩts</span>}>
        <div className="grid md:grid-cols-2 gap-8">
          <div>
            <h4 className="text-green-700 font-bold mb-2">DoтАЩs</h4>
            <ul className="list-disc list-inside text-gray-700 space-y-2">
              {dos.map((d, i) => <li key={i}>{d}</li>)}
            </ul>
          </div>
          <div>
            <h4 className="text-red-700 font-bold mb-2">DonтАЩts</h4>
            <ul className="list-disc list-inside text-gray-700 space-y-2">
              {donts.map((d, i) => <li key={i}>{d}</li>)}
            </ul>
          </div>
        </div>
      </SectionWrapper>

      {/* Student Voices */}
      <SectionWrapper title={<span>ЁЯОд Squad Stories</span>} subtitle="Bangladeshi student-ржжрзЗрж░ real mastery hacks!">
        <div className="grid md:grid-cols-2 gap-6">
          {studentStories.map((s, i) => (
            <div key={i} className="bg-white rounded-xl shadow p-6 border-l-4 border-blue-400">
              <p className="italic text-gray-800 mb-2">{s.story}</p>
              <div className="text-right text-blue-700 font-semibold">тАФ {s.name}</div>
              <div className="mt-2 text-green-600 text-sm">{s.advice}</div>
            </div>
          ))}
        </div>
      </SectionWrapper>

      {/* Study Techniques Gallery */}
      <SectionWrapper title={<span>ЁЯза Strategy Power-Ups</span>} subtitle="Click any strategyтАФsee how cool toppers actually study!">
        <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
          {subjectMasteryStrategies.map(strategy => {
            const Icon = strategy.icon;
            return (
              <button 
                key={strategy.id} 
                onClick={() => setSelectedStrategy(strategy)} 
                className="text-left group w-full"
                aria-label={`Learn more about ${strategy.title}`}
              >
                <Card 
                  title={<span className="flex items-center gap-2">{<Icon className="w-7 h-7" />} {strategy.title}</span>} 
                  className="h-full group-hover:ring-2 group-hover:ring-blue-500 group-focus:ring-2 group-focus:ring-blue-500"
                >
                  <p>{strategy.description}</p>
                  <span className="mt-2 inline-block text-blue-600 font-semibold group-hover:underline">View Details &rarr;</span>
                  <div className="text-xs text-blue-400 mt-1">Cool Tip: ржПржЗ strategy-ржЯрж╛ ICT, Math, BanglaтАФрж╕ржм subject-ржП ржХрж╛ржЬ ржХрж░рзЗ!</div>
                </Card>
              </button>
            );
          })}
        </div>
      </SectionWrapper>

      {/* Modal for Strategy Detail */}
      {selectedStrategy && (
        <div 
          className="fixed inset-0 bg-black bg-opacity-60 backdrop-blur-md flex justify-center items-center p-4 z-[100] overflow-y-auto" 
          onClick={() => setSelectedStrategy(null)}
          role="dialog"
          aria-modal="true"
          aria-labelledby={`mastery-strategy-modal-title-${selectedStrategy.id}`}
        >
          <div 
            className="bg-gradient-to-br from-slate-100 to-sky-100 p-1 rounded-xl shadow-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto" 
            onClick={e => e.stopPropagation()}
          >
            <div className="bg-white p-1 rounded-lg">
              <div id={`mastery-strategy-modal-title-${selectedStrategy.id}`} className="sr-only">{selectedStrategy.title} Details</div>
              <StrategyDetail strategy={selectedStrategy} />
              <button
                onClick={() => setSelectedStrategy(null)}
                className="mt-4 mb-2 ml-6 bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded-lg transition-colors"
              >
                Close Details
              </button>
            </div>
          </div>
        </div>
      )}

      {/* Test Anxiety Toolkit (FAQ) */}
      <SectionWrapper title={<span>ЁЯзШ Test Anxiety Toolkit</span>} subtitle="Exam ржорж╛ржирзЗ war ржирж╛тАФcalm ржерж╛ржХрзЛ, confident ржерж╛ржХрзЛ, boss ржерж╛ржХрзЛ!">
        <div className="grid md:grid-cols-2 gap-8 mb-8">
          {faq.map((item, i) => (
            <div key={i} className="bg-blue-50 rounded-xl shadow p-6 mb-2">
              <button
                className="w-full text-left font-semibold text-blue-800 focus:outline-none focus:underline"
                onClick={() => setOpenFaq(openFaq === i ? null : i)}
                aria-expanded={openFaq === i}
                aria-controls={`faq-panel-${i}`}
              >
                {item.q}
              </button>
              <div
                id={`faq-panel-${i}`}
                className={`mt-2 text-gray-700 transition-all duration-300 ${openFaq === i ? 'max-h-40 opacity-100' : 'max-h-0 opacity-0 overflow-hidden'}`}
                aria-hidden={openFaq !== i}
              >
                {item.a}
              </div>
            </div>
          ))}
        </div>
        <div className="bg-white rounded-xl shadow p-6">
          <h4 className="font-bold text-blue-700 mb-2">Extra Buddy Tips</h4>
          <ul className="list-disc list-inside space-y-2 text-gray-600">
            <li><strong>Solid Preparation:</strong> ржнрж╛рж▓рзЛ ржХрж░рзЗ ржкрзЬрж╛ ржорж╛ржирзЗ anxiety ржХржорзЗ ржпрж╛ржмрзЗтАФрждрзБржорж┐ ready!</li>
            <li><strong>Positive Self-Talk:</strong> Negative thought-ржХрзЗ positive-ржП ржмржжрж▓рж╛ржУтАФтАЬржЖржорж┐ ржкрж╛рж░рж┐, ржЖржорж┐ ржкрзНрж░рж╕рзНрждрзБржд!тАЭ</li>
            <li><strong>Visualize Success:</strong> ржирж┐ржЬрзЗржХрзЗ calm, confident, winner рж╣рж┐рж╕рзЗржмрзЗ imagine ржХрж░рзЛтАФsee it, believe it!</li>
            <li><strong>Sleep & Food:</strong> Healthy body ржорж╛ржирзЗ calm mindтАФржШрзБржо, ржЦрж╛ржмрж╛рж░ skip ржХрж░рзЛ ржирж╛!</li>
            <li><strong>Arrive Early:</strong> Last minute rush ржорж╛ржирзЗ stressтАФржЖржЧрзЗ ржЧрж┐рзЯрзЗ relax ржХрж░рзЛред</li>
            <li><strong>Read Carefully:</strong> Instruction ржнрж╛рж▓рзЛ ржХрж░рзЗ ржкрзЬрзЛтАФconfusion zero!</li>
            <li><strong>Your Own Pace:</strong> ржЕржирзНржпржжрзЗрж░ ржжрзЗржЦрзЗ stress ржирж┐ржУ ржирж╛тАФржирж┐ржЬрзЗрж░ plan-ржП ржерж╛ржХрзЛред</li>
            <li><strong>If You Blank Out:</strong> Deep breath, easy question ржжрж┐рзЯрзЗ рж╢рзБрж░рзБтАФpanic ржорж╛ржирзЗ pause, not game over!</li>
          </ul>
        </div>
      </SectionWrapper>
    </div>
  );
};

export default SingleSubjectMasteryPage;
